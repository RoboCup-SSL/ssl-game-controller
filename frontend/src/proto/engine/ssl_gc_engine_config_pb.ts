// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file engine/ssl_gc_engine_config.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file engine/ssl_gc_engine_config.proto.
 */
export const file_engine_ssl_gc_engine_config: GenFile = /*@__PURE__*/
  fileDesc("CiFlbmdpbmUvc3NsX2djX2VuZ2luZV9jb25maWcucHJvdG8i7AMKBkNvbmZpZxI7ChNnYW1lX2V2ZW50X2JlaGF2aW9yGAEgAygLMh4uQ29uZmlnLkdhbWVFdmVudEJlaGF2aW9yRW50cnkSNQoQYXV0b19yZWZfY29uZmlncxgCIAMoCzIbLkNvbmZpZy5BdXRvUmVmQ29uZmlnc0VudHJ5Eh0KFWFjdGl2ZV90cmFja2VyX3NvdXJjZRgDIAEoCRINCgV0ZWFtcxgEIAMoCRIVCg1hdXRvX2NvbnRpbnVlGAUgASgIGkoKFkdhbWVFdmVudEJlaGF2aW9yRW50cnkSCwoDa2V5GAEgASgJEh8KBXZhbHVlGAIgASgOMhAuQ29uZmlnLkJlaGF2aW9yOgI4ARpFChNBdXRvUmVmQ29uZmlnc0VudHJ5EgsKA2tleRgBIAEoCRIdCgV2YWx1ZRgCIAEoCzIOLkF1dG9SZWZDb25maWc6AjgBIpUBCghCZWhhdmlvchIUChBCRUhBVklPUl9VTktOT1dOEAASEwoPQkVIQVZJT1JfQUNDRVBUEAESHAoYQkVIQVZJT1JfQUNDRVBUX01BSk9SSVRZEAISGQoVQkVIQVZJT1JfUFJPUE9TRV9PTkxZEAMSEAoMQkVIQVZJT1JfTE9HEAQSEwoPQkVIQVZJT1JfSUdOT1JFEAUihAIKDUF1dG9SZWZDb25maWcSQgoTZ2FtZV9ldmVudF9iZWhhdmlvchgBIAMoCzIlLkF1dG9SZWZDb25maWcuR2FtZUV2ZW50QmVoYXZpb3JFbnRyeRpRChZHYW1lRXZlbnRCZWhhdmlvckVudHJ5EgsKA2tleRgBIAEoCRImCgV2YWx1ZRgCIAEoDjIXLkF1dG9SZWZDb25maWcuQmVoYXZpb3I6AjgBIlwKCEJlaGF2aW9yEhQKEEJFSEFWSU9SX1VOS05PV04QABITCg9CRUhBVklPUl9BQ0NFUFQQARIQCgxCRUhBVklPUl9MT0cQAhITCg9CRUhBVklPUl9JR05PUkUQA0JaQhZTc2xHY0VuZ2luZUNvbmZpZ1Byb3RvUAFaPmdpdGh1Yi5jb20vUm9ib0N1cC1TU0wvc3NsLWdhbWUtY29udHJvbGxlci9pbnRlcm5hbC9hcHAvZW5naW5l");

/**
 * The engine config
 *
 * @generated from message Config
 */
export type Config = Message<"Config"> & {
  /**
   * The behavior for each game event
   *
   * @generated from field: map<string, Config.Behavior> game_event_behavior = 1;
   */
  gameEventBehavior: { [key: string]: Config_Behavior };

  /**
   * The config for each auto referee
   *
   * @generated from field: map<string, AutoRefConfig> auto_ref_configs = 2;
   */
  autoRefConfigs: { [key: string]: AutoRefConfig };

  /**
   * The selected tracker source
   *
   * @generated from field: optional string active_tracker_source = 3;
   */
  activeTrackerSource: string;

  /**
   * The list of available teams
   *
   * @generated from field: repeated string teams = 4;
   */
  teams: string[];

  /**
   * Enable or disable auto continuation
   *
   * @generated from field: optional bool auto_continue = 5;
   */
  autoContinue: boolean;
};

/**
 * The engine config
 *
 * @generated from message Config
 */
export type ConfigJson = {
  /**
   * The behavior for each game event
   *
   * @generated from field: map<string, Config.Behavior> game_event_behavior = 1;
   */
  gameEventBehavior?: { [key: string]: Config_BehaviorJson };

  /**
   * The config for each auto referee
   *
   * @generated from field: map<string, AutoRefConfig> auto_ref_configs = 2;
   */
  autoRefConfigs?: { [key: string]: AutoRefConfigJson };

  /**
   * The selected tracker source
   *
   * @generated from field: optional string active_tracker_source = 3;
   */
  activeTrackerSource?: string;

  /**
   * The list of available teams
   *
   * @generated from field: repeated string teams = 4;
   */
  teams?: string[];

  /**
   * Enable or disable auto continuation
   *
   * @generated from field: optional bool auto_continue = 5;
   */
  autoContinue?: boolean;
};

/**
 * Describes the message Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema: GenMessage<Config, ConfigJson> = /*@__PURE__*/
  messageDesc(file_engine_ssl_gc_engine_config, 0);

/**
 * Behaviors for each game event
 *
 * @generated from enum Config.Behavior
 */
export enum Config_Behavior {
  /**
   * Not set or unknown
   *
   * @generated from enum value: BEHAVIOR_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Always accept the game event
   *
   * @generated from enum value: BEHAVIOR_ACCEPT = 1;
   */
  ACCEPT = 1,

  /**
   * Accept the game event if was reported by a majority
   *
   * @generated from enum value: BEHAVIOR_ACCEPT_MAJORITY = 2;
   */
  ACCEPT_MAJORITY = 2,

  /**
   * Only propose the game event (can be accepted in the UI by a human)
   *
   * @generated from enum value: BEHAVIOR_PROPOSE_ONLY = 3;
   */
  PROPOSE_ONLY = 3,

  /**
   * Only log the game event to the protocol
   *
   * @generated from enum value: BEHAVIOR_LOG = 4;
   */
  LOG = 4,

  /**
   * Silently ignore the game event
   *
   * @generated from enum value: BEHAVIOR_IGNORE = 5;
   */
  IGNORE = 5,
}

/**
 * Behaviors for each game event
 *
 * @generated from enum Config.Behavior
 */
export type Config_BehaviorJson = "BEHAVIOR_UNKNOWN" | "BEHAVIOR_ACCEPT" | "BEHAVIOR_ACCEPT_MAJORITY" | "BEHAVIOR_PROPOSE_ONLY" | "BEHAVIOR_LOG" | "BEHAVIOR_IGNORE";

/**
 * Describes the enum Config.Behavior.
 */
export const Config_BehaviorSchema: GenEnum<Config_Behavior, Config_BehaviorJson> = /*@__PURE__*/
  enumDesc(file_engine_ssl_gc_engine_config, 0, 0);

/**
 * The config for an auto referee
 *
 * @generated from message AutoRefConfig
 */
export type AutoRefConfig = Message<"AutoRefConfig"> & {
  /**
   * The game event behaviors for this auto referee
   *
   * @generated from field: map<string, AutoRefConfig.Behavior> game_event_behavior = 1;
   */
  gameEventBehavior: { [key: string]: AutoRefConfig_Behavior };
};

/**
 * The config for an auto referee
 *
 * @generated from message AutoRefConfig
 */
export type AutoRefConfigJson = {
  /**
   * The game event behaviors for this auto referee
   *
   * @generated from field: map<string, AutoRefConfig.Behavior> game_event_behavior = 1;
   */
  gameEventBehavior?: { [key: string]: AutoRefConfig_BehaviorJson };
};

/**
 * Describes the message AutoRefConfig.
 * Use `create(AutoRefConfigSchema)` to create a new message.
 */
export const AutoRefConfigSchema: GenMessage<AutoRefConfig, AutoRefConfigJson> = /*@__PURE__*/
  messageDesc(file_engine_ssl_gc_engine_config, 1);

/**
 * Behaviors for the game events reported by this auto referee
 *
 * @generated from enum AutoRefConfig.Behavior
 */
export enum AutoRefConfig_Behavior {
  /**
   * Not set or unknown
   *
   * @generated from enum value: BEHAVIOR_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Accept the game event
   *
   * @generated from enum value: BEHAVIOR_ACCEPT = 1;
   */
  ACCEPT = 1,

  /**
   * Log the game event
   *
   * @generated from enum value: BEHAVIOR_LOG = 2;
   */
  LOG = 2,

  /**
   * Silently ignore the game event
   *
   * @generated from enum value: BEHAVIOR_IGNORE = 3;
   */
  IGNORE = 3,
}

/**
 * Behaviors for the game events reported by this auto referee
 *
 * @generated from enum AutoRefConfig.Behavior
 */
export type AutoRefConfig_BehaviorJson = "BEHAVIOR_UNKNOWN" | "BEHAVIOR_ACCEPT" | "BEHAVIOR_LOG" | "BEHAVIOR_IGNORE";

/**
 * Describes the enum AutoRefConfig.Behavior.
 */
export const AutoRefConfig_BehaviorSchema: GenEnum<AutoRefConfig_Behavior, AutoRefConfig_BehaviorJson> = /*@__PURE__*/
  enumDesc(file_engine_ssl_gc_engine_config, 1, 0);

