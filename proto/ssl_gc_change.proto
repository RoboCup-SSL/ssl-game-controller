syntax = "proto2";

option go_package = "github.com/RoboCup-SSL/ssl-game-controller/internal/app/statemachine";

import "ssl_gc_state.proto";
import "ssl_gc_common.proto";
import "ssl_gc_geometry.proto";
import "ssl_gc_game_event.proto";
import "ssl_gc_referee_message.proto";

import "google/protobuf/timestamp.proto";

message StateChange {
    optional int32 id = 1;
    optional State state_pre = 2;
    optional State state = 3;
    optional Change change = 4;
    optional google.protobuf.Timestamp timestamp = 5;
}

message Change {
    optional string origin = 1;
    optional bool revertible = 16;

    oneof change {
        NewCommand new_command = 2;
        ChangeStage change_stage = 3;
        SetBallPlacementPos set_ball_placement_pos = 4;
        AddYellowCard add_yellow_card = 5;
        AddRedCard add_red_card = 6;
        YellowCardOver yellow_card_over = 7;
        AddGameEvent add_game_event = 8;
        AddPassiveGameEvent add_passive_game_event = 19;
        AddProposal add_proposal = 9;
        StartBallPlacement start_ball_placement = 10;
        Continue continue = 11;
        UpdateConfig update_config = 12;
        UpdateTeamState update_team_state = 13;
        SwitchColors switch_colors = 14;
        Revert revert = 15;
        NewGameState new_game_state = 17;
        AcceptProposalGroup accept_proposal_group = 18;
    }
}

message NewCommand {
    optional Command command = 1;
}

message ChangeStage {
    optional Referee.Stage new_stage = 1;
}

message SetBallPlacementPos {
    optional Vector2 pos = 1;
}

message AddYellowCard {
    optional SSL_Team for_team = 1;
    optional GameEvent caused_by_game_event = 2;
}

message AddRedCard {
    optional SSL_Team for_team = 1;
    optional GameEvent caused_by_game_event = 2;
}

message YellowCardOver {
    optional SSL_Team for_team = 1;
}

message AddGameEvent {
    optional GameEvent game_event = 1;
}

message AddPassiveGameEvent {
    optional GameEvent game_event = 1;
}

message AddProposal {
    optional Proposal proposal = 1;
}

message AcceptProposalGroup {
    optional uint32 group_id = 1;
    optional string accepted_by = 2;
}

message StartBallPlacement {
}

message Continue {
}

message UpdateConfig {
    optional Division division = 1;
    optional SSL_Team first_kickoff_team = 2;
    optional bool auto_continue = 3;
}

message UpdateTeamState {
    optional SSL_Team for_team = 1;

    optional string team_name = 2;
    optional int32 goals = 3;
    optional int32 goalkeeper = 4;
    optional int32 timeouts_left = 5;
    optional string timeout_time_left = 6;
    optional bool on_positive_half = 7;
    optional int32 ball_placement_failures = 8;
    optional bool can_place_ball = 9;
    optional int32 challenge_flags = 21;
    optional bool requests_bot_substitution = 10;
    optional bool requests_timeout = 17;
    optional bool requests_challenge = 18;
    optional bool requests_emergency_stop = 19;
    optional YellowCard yellow_card = 20;
    optional RedCard red_card = 12;
    optional Foul foul = 13;
    optional uint32 remove_yellow_card = 14;
    optional uint32 remove_red_card = 15;
    optional uint32 remove_foul = 16;
}

message SwitchColors {
}

message Revert {
    optional int32 change_id = 1;
}

message NewGameState {
    optional GameState game_state = 1;
}
