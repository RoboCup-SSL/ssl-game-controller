// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file rcon/ssl_gc_rcon_autoref.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { GameEvent, GameEventJson } from "../state/ssl_gc_game_event_pb";
import { file_state_ssl_gc_game_event } from "../state/ssl_gc_game_event_pb";
import type { ControllerReply, ControllerReplyJson, Signature, SignatureJson } from "./ssl_gc_rcon_pb";
import { file_rcon_ssl_gc_rcon } from "./ssl_gc_rcon_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file rcon/ssl_gc_rcon_autoref.proto.
 */
export const file_rcon_ssl_gc_rcon_autoref: GenFile = /*@__PURE__*/
  fileDesc("Ch5yY29uL3NzbF9nY19yY29uX2F1dG9yZWYucHJvdG8iSAoTQXV0b1JlZlJlZ2lzdHJhdGlvbhISCgppZGVudGlmaWVyGAEgAigJEh0KCXNpZ25hdHVyZRgCIAEoCzIKLlNpZ25hdHVyZSJgChNBdXRvUmVmVG9Db250cm9sbGVyEh0KCXNpZ25hdHVyZRgBIAEoCzIKLlNpZ25hdHVyZRIeCgpnYW1lX2V2ZW50GAIgASgLMgouR2FtZUV2ZW50SgQIAxAESgQIBBAFIkoKE0NvbnRyb2xsZXJUb0F1dG9SZWYSLAoQY29udHJvbGxlcl9yZXBseRgBIAEoCzIQLkNvbnRyb2xsZXJSZXBseUgAQgUKA21zZ0JXQhVTc2xHY1Jjb25BdXRvcmVmUHJvdG9QAVo8Z2l0aHViLmNvbS9Sb2JvQ3VwLVNTTC9zc2wtZ2FtZS1jb250cm9sbGVyL2ludGVybmFsL2FwcC9yY29u", [file_state_ssl_gc_game_event, file_rcon_ssl_gc_rcon]);

/**
 * AutoRefRegistration is the first message that a client must send to the controller to identify itself
 *
 * @generated from message AutoRefRegistration
 */
export type AutoRefRegistration = Message<"AutoRefRegistration"> & {
  /**
   * identifier is a unique name of the client
   *
   * @generated from field: required string identifier = 1;
   */
  identifier: string;

  /**
   * signature can optionally be specified to enable secure communication
   *
   * @generated from field: optional Signature signature = 2;
   */
  signature?: Signature;
};

/**
 * AutoRefRegistration is the first message that a client must send to the controller to identify itself
 *
 * @generated from message AutoRefRegistration
 */
export type AutoRefRegistrationJson = {
  /**
   * identifier is a unique name of the client
   *
   * @generated from field: required string identifier = 1;
   */
  identifier?: string;

  /**
   * signature can optionally be specified to enable secure communication
   *
   * @generated from field: optional Signature signature = 2;
   */
  signature?: SignatureJson;
};

/**
 * Describes the message AutoRefRegistration.
 * Use `create(AutoRefRegistrationSchema)` to create a new message.
 */
export const AutoRefRegistrationSchema: GenMessage<AutoRefRegistration, AutoRefRegistrationJson> = /*@__PURE__*/
  messageDesc(file_rcon_ssl_gc_rcon_autoref, 0);

/**
 * AutoRefToController is the wrapper message for all subsequent messages from the autoRef to the controller
 *
 * @generated from message AutoRefToController
 */
export type AutoRefToController = Message<"AutoRefToController"> & {
  /**
   * signature can optionally be specified to enable secure communication
   *
   * @generated from field: optional Signature signature = 1;
   */
  signature?: Signature;

  /**
   * game_event is an optional event that the autoRef detected during the game
   *
   * @generated from field: optional GameEvent game_event = 2;
   */
  gameEvent?: GameEvent;
};

/**
 * AutoRefToController is the wrapper message for all subsequent messages from the autoRef to the controller
 *
 * @generated from message AutoRefToController
 */
export type AutoRefToControllerJson = {
  /**
   * signature can optionally be specified to enable secure communication
   *
   * @generated from field: optional Signature signature = 1;
   */
  signature?: SignatureJson;

  /**
   * game_event is an optional event that the autoRef detected during the game
   *
   * @generated from field: optional GameEvent game_event = 2;
   */
  gameEvent?: GameEventJson;
};

/**
 * Describes the message AutoRefToController.
 * Use `create(AutoRefToControllerSchema)` to create a new message.
 */
export const AutoRefToControllerSchema: GenMessage<AutoRefToController, AutoRefToControllerJson> = /*@__PURE__*/
  messageDesc(file_rcon_ssl_gc_rcon_autoref, 1);

/**
 * ControllerToAutoRef is the wrapper message for all messages from controller to autoRef
 *
 * @generated from message ControllerToAutoRef
 */
export type ControllerToAutoRef = Message<"ControllerToAutoRef"> & {
  /**
   * @generated from oneof ControllerToAutoRef.msg
   */
  msg: {
    /**
     * a reply from the controller
     *
     * @generated from field: ControllerReply controller_reply = 1;
     */
    value: ControllerReply;
    case: "controllerReply";
  } | { case: undefined; value?: undefined };
};

/**
 * ControllerToAutoRef is the wrapper message for all messages from controller to autoRef
 *
 * @generated from message ControllerToAutoRef
 */
export type ControllerToAutoRefJson = {
  /**
   * a reply from the controller
   *
   * @generated from field: ControllerReply controller_reply = 1;
   */
  controllerReply?: ControllerReplyJson;
};

/**
 * Describes the message ControllerToAutoRef.
 * Use `create(ControllerToAutoRefSchema)` to create a new message.
 */
export const ControllerToAutoRefSchema: GenMessage<ControllerToAutoRef, ControllerToAutoRefJson> = /*@__PURE__*/
  messageDesc(file_rcon_ssl_gc_rcon_autoref, 2);

