// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file state/ssl_gc_state.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Division, DivisionJson, Team, TeamJson } from "./ssl_gc_common_pb";
import { file_state_ssl_gc_common } from "./ssl_gc_common_pb";
import type { Vector2, Vector2Json } from "../geom/ssl_gc_geometry_pb";
import { file_geom_ssl_gc_geometry } from "../geom/ssl_gc_geometry_pb";
import type { GameEvent, GameEventJson } from "./ssl_gc_game_event_pb";
import { file_state_ssl_gc_game_event } from "./ssl_gc_game_event_pb";
import type { HullColor, HullColorJson, MatchType, MatchTypeJson, Referee_Stage, Referee_StageJson } from "./ssl_gc_referee_message_pb";
import { file_state_ssl_gc_referee_message } from "./ssl_gc_referee_message_pb";
import type { Duration, DurationJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file state/ssl_gc_state.proto.
 */
export const file_state_ssl_gc_state: GenFile = /*@__PURE__*/
  fileDesc("ChhzdGF0ZS9zc2xfZ2Nfc3RhdGUucHJvdG8idQoKWWVsbG93Q2FyZBIKCgJpZBgBIAEoDRIoChRjYXVzZWRfYnlfZ2FtZV9ldmVudBgCIAEoCzIKLkdhbWVFdmVudBIxCg50aW1lX3JlbWFpbmluZxgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiI/CgdSZWRDYXJkEgoKAmlkGAEgASgNEigKFGNhdXNlZF9ieV9nYW1lX2V2ZW50GAIgASgLMgouR2FtZUV2ZW50ImsKBEZvdWwSCgoCaWQYASABKA0SKAoUY2F1c2VkX2J5X2dhbWVfZXZlbnQYAiABKAsyCi5HYW1lRXZlbnQSLQoJdGltZXN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCLZAQoHQ29tbWFuZBIbCgR0eXBlGAEgAigOMg0uQ29tbWFuZC5UeXBlEhcKCGZvcl90ZWFtGAIgAigOMgUuVGVhbSKXAQoEVHlwZRILCgdVTktOT1dOEAASCAoESEFMVBABEggKBFNUT1AQAhIQCgxOT1JNQUxfU1RBUlQQAxIPCgtGT1JDRV9TVEFSVBAEEgoKBkRJUkVDVBAFEgsKB0tJQ0tPRkYQBxILCgdQRU5BTFRZEAgSCwoHVElNRU9VVBAJEhIKDkJBTExfUExBQ0VNRU5UEAoiBAgGEAYiwwEKCUdhbWVTdGF0ZRIdCgR0eXBlGAEgAigOMg8uR2FtZVN0YXRlLlR5cGUSFwoIZm9yX3RlYW0YAiABKA4yBS5UZWFtIn4KBFR5cGUSCwoHVU5LTk9XThAAEggKBEhBTFQQARIICgRTVE9QEAISCwoHUlVOTklORxADEg0KCUZSRUVfS0lDSxAEEgsKB0tJQ0tPRkYQBRILCgdQRU5BTFRZEAYSCwoHVElNRU9VVBAHEhIKDkJBTExfUExBQ0VNRU5UEAgiWQoIUHJvcG9zYWwSLQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIeCgpnYW1lX2V2ZW50GAIgASgLMgouR2FtZUV2ZW50IlEKDVByb3Bvc2FsR3JvdXASCgoCaWQYBCABKAkSHAoJcHJvcG9zYWxzGAEgAygLMgkuUHJvcG9zYWwSEAoIYWNjZXB0ZWQYAiABKAhKBAgDEAQi8gUKCFRlYW1JbmZvEgwKBG5hbWUYASABKAkSDQoFZ29hbHMYAiABKAUSEgoKZ29hbGtlZXBlchgDIAEoBRIhCgx5ZWxsb3dfY2FyZHMYBCADKAsyCy5ZZWxsb3dDYXJkEhsKCXJlZF9jYXJkcxgFIAMoCzIILlJlZENhcmQSFQoNdGltZW91dHNfbGVmdBgGIAEoBRI0ChF0aW1lb3V0X3RpbWVfbGVmdBgHIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIYChBvbl9wb3NpdGl2ZV9oYWxmGAggASgIEhQKBWZvdWxzGAkgAygLMgUuRm91bBIfChdiYWxsX3BsYWNlbWVudF9mYWlsdXJlcxgKIAEoBRInCh9iYWxsX3BsYWNlbWVudF9mYWlsdXJlc19yZWFjaGVkGAsgASgIEhYKDmNhbl9wbGFjZV9iYWxsGAwgASgIEhgKEG1heF9hbGxvd2VkX2JvdHMYDSABKAUSQwofcmVxdWVzdHNfYm90X3N1YnN0aXR1dGlvbl9zaW5jZRgOIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASOgoWcmVxdWVzdHNfdGltZW91dF9zaW5jZRgPIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQQodcmVxdWVzdHNfZW1lcmdlbmN5X3N0b3Bfc2luY2UYECABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhcKD2NoYWxsZW5nZV9mbGFncxgRIAEoBRIgChhib3Rfc3Vic3RpdHV0aW9uX2FsbG93ZWQYEiABKAgSHgoWYm90X3N1YnN0aXR1dGlvbnNfbGVmdBgTIAEoBRI9Chpib3Rfc3Vic3RpdHV0aW9uX3RpbWVfbGVmdBgUIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIeCgpodWxsX2NvbG9yGBUgASgOMgouSHVsbENvbG9yIrEGCgVTdGF0ZRIdCgVzdGFnZRgBIAEoDjIOLlJlZmVyZWUuU3RhZ2USGQoHY29tbWFuZBgCIAEoCzIILkNvbW1hbmQSHgoKZ2FtZV9zdGF0ZRgTIAEoCzIKLkdhbWVTdGF0ZRI1ChJzdGFnZV90aW1lX2VsYXBzZWQYBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SMgoPc3RhZ2VfdGltZV9sZWZ0GAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEjQKEG1hdGNoX3RpbWVfc3RhcnQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEikKCnRlYW1fc3RhdGUYCCADKAsyFS5TdGF0ZS5UZWFtU3RhdGVFbnRyeRIfCg1wbGFjZW1lbnRfcG9zGAkgASgLMgguVmVjdG9yMhIeCgxuZXh0X2NvbW1hbmQYCiABKAsyCC5Db21tYW5kEkAKHWN1cnJlbnRfYWN0aW9uX3RpbWVfcmVtYWluaW5nGAwgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEh8KC2dhbWVfZXZlbnRzGA0gAygLMgouR2FtZUV2ZW50EicKD3Byb3Bvc2FsX2dyb3VwcxgOIAMoCzIOLlByb3Bvc2FsR3JvdXASGwoIZGl2aXNpb24YDyABKA4yCS5EaXZpc2lvbhIhChJmaXJzdF9raWNrb2ZmX3RlYW0YESABKA4yBS5UZWFtEh4KCm1hdGNoX3R5cGUYEiABKA4yCi5NYXRjaFR5cGUSNwoTcmVhZHlfY29udGludWVfdGltZRgUIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASJgoOc2hvb3RvdXRfc3RhdGUYFSABKAsyDi5TaG9vdG91dFN0YXRlEhYKDnN0YXR1c19tZXNzYWdlGBYgASgJEhkKEW1heF9ib3RzX3Blcl90ZWFtGBcgASgFGjsKDlRlYW1TdGF0ZUVudHJ5EgsKA2tleRgBIAEoCRIYCgV2YWx1ZRgCIAEoCzIJLlRlYW1JbmZvOgI4AUoECBAQESKkAQoNU2hvb3RvdXRTdGF0ZRIYCgluZXh0X3RlYW0YASABKA4yBS5UZWFtEkAKEm51bWJlcl9vZl9hdHRlbXB0cxgCIAMoCzIkLlNob290b3V0U3RhdGUuTnVtYmVyT2ZBdHRlbXB0c0VudHJ5GjcKFU51bWJlck9mQXR0ZW1wdHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAU6AjgBQlJCD1NzbEdjU3RhdGVQcm90b1ABWj1naXRodWIuY29tL1JvYm9DdXAtU1NML3NzbC1nYW1lLWNvbnRyb2xsZXIvaW50ZXJuYWwvYXBwL3N0YXRl", [file_state_ssl_gc_common, file_geom_ssl_gc_geometry, file_state_ssl_gc_game_event, file_state_ssl_gc_referee_message, file_google_protobuf_duration, file_google_protobuf_timestamp]);

/**
 * @generated from message YellowCard
 */
export type YellowCard = Message<"YellowCard"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional GameEvent caused_by_game_event = 2;
   */
  causedByGameEvent?: GameEvent;

  /**
   * @generated from field: optional google.protobuf.Duration time_remaining = 3;
   */
  timeRemaining?: Duration;
};

/**
 * @generated from message YellowCard
 */
export type YellowCardJson = {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: optional GameEvent caused_by_game_event = 2;
   */
  causedByGameEvent?: GameEventJson;

  /**
   * @generated from field: optional google.protobuf.Duration time_remaining = 3;
   */
  timeRemaining?: DurationJson;
};

/**
 * Describes the message YellowCard.
 * Use `create(YellowCardSchema)` to create a new message.
 */
export const YellowCardSchema: GenMessage<YellowCard, YellowCardJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 0);

/**
 * @generated from message RedCard
 */
export type RedCard = Message<"RedCard"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional GameEvent caused_by_game_event = 2;
   */
  causedByGameEvent?: GameEvent;
};

/**
 * @generated from message RedCard
 */
export type RedCardJson = {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: optional GameEvent caused_by_game_event = 2;
   */
  causedByGameEvent?: GameEventJson;
};

/**
 * Describes the message RedCard.
 * Use `create(RedCardSchema)` to create a new message.
 */
export const RedCardSchema: GenMessage<RedCard, RedCardJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 1);

/**
 * @generated from message Foul
 */
export type Foul = Message<"Foul"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional GameEvent caused_by_game_event = 2;
   */
  causedByGameEvent?: GameEvent;

  /**
   * @generated from field: optional google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;
};

/**
 * @generated from message Foul
 */
export type FoulJson = {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: optional GameEvent caused_by_game_event = 2;
   */
  causedByGameEvent?: GameEventJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: TimestampJson;
};

/**
 * Describes the message Foul.
 * Use `create(FoulSchema)` to create a new message.
 */
export const FoulSchema: GenMessage<Foul, FoulJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 2);

/**
 * @generated from message Command
 */
export type Command = Message<"Command"> & {
  /**
   * @generated from field: required Command.Type type = 1;
   */
  type: Command_Type;

  /**
   * @generated from field: required Team for_team = 2;
   */
  forTeam: Team;
};

/**
 * @generated from message Command
 */
export type CommandJson = {
  /**
   * @generated from field: required Command.Type type = 1;
   */
  type?: Command_TypeJson;

  /**
   * @generated from field: required Team for_team = 2;
   */
  forTeam?: TeamJson;
};

/**
 * Describes the message Command.
 * Use `create(CommandSchema)` to create a new message.
 */
export const CommandSchema: GenMessage<Command, CommandJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 3);

/**
 * @generated from enum Command.Type
 */
export enum Command_Type {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: HALT = 1;
   */
  HALT = 1,

  /**
   * @generated from enum value: STOP = 2;
   */
  STOP = 2,

  /**
   * @generated from enum value: NORMAL_START = 3;
   */
  NORMAL_START = 3,

  /**
   * @generated from enum value: FORCE_START = 4;
   */
  FORCE_START = 4,

  /**
   * @generated from enum value: DIRECT = 5;
   */
  DIRECT = 5,

  /**
   * @generated from enum value: KICKOFF = 7;
   */
  KICKOFF = 7,

  /**
   * @generated from enum value: PENALTY = 8;
   */
  PENALTY = 8,

  /**
   * @generated from enum value: TIMEOUT = 9;
   */
  TIMEOUT = 9,

  /**
   * @generated from enum value: BALL_PLACEMENT = 10;
   */
  BALL_PLACEMENT = 10,
}

/**
 * @generated from enum Command.Type
 */
export type Command_TypeJson = "UNKNOWN" | "HALT" | "STOP" | "NORMAL_START" | "FORCE_START" | "DIRECT" | "KICKOFF" | "PENALTY" | "TIMEOUT" | "BALL_PLACEMENT";

/**
 * Describes the enum Command.Type.
 */
export const Command_TypeSchema: GenEnum<Command_Type, Command_TypeJson> = /*@__PURE__*/
  enumDesc(file_state_ssl_gc_state, 3, 0);

/**
 * @generated from message GameState
 */
export type GameState = Message<"GameState"> & {
  /**
   * @generated from field: required GameState.Type type = 1;
   */
  type: GameState_Type;

  /**
   * @generated from field: optional Team for_team = 2;
   */
  forTeam: Team;
};

/**
 * @generated from message GameState
 */
export type GameStateJson = {
  /**
   * @generated from field: required GameState.Type type = 1;
   */
  type?: GameState_TypeJson;

  /**
   * @generated from field: optional Team for_team = 2;
   */
  forTeam?: TeamJson;
};

/**
 * Describes the message GameState.
 * Use `create(GameStateSchema)` to create a new message.
 */
export const GameStateSchema: GenMessage<GameState, GameStateJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 4);

/**
 * @generated from enum GameState.Type
 */
export enum GameState_Type {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: HALT = 1;
   */
  HALT = 1,

  /**
   * @generated from enum value: STOP = 2;
   */
  STOP = 2,

  /**
   * @generated from enum value: RUNNING = 3;
   */
  RUNNING = 3,

  /**
   * @generated from enum value: FREE_KICK = 4;
   */
  FREE_KICK = 4,

  /**
   * @generated from enum value: KICKOFF = 5;
   */
  KICKOFF = 5,

  /**
   * @generated from enum value: PENALTY = 6;
   */
  PENALTY = 6,

  /**
   * @generated from enum value: TIMEOUT = 7;
   */
  TIMEOUT = 7,

  /**
   * @generated from enum value: BALL_PLACEMENT = 8;
   */
  BALL_PLACEMENT = 8,
}

/**
 * @generated from enum GameState.Type
 */
export type GameState_TypeJson = "UNKNOWN" | "HALT" | "STOP" | "RUNNING" | "FREE_KICK" | "KICKOFF" | "PENALTY" | "TIMEOUT" | "BALL_PLACEMENT";

/**
 * Describes the enum GameState.Type.
 */
export const GameState_TypeSchema: GenEnum<GameState_Type, GameState_TypeJson> = /*@__PURE__*/
  enumDesc(file_state_ssl_gc_state, 4, 0);

/**
 * @generated from message Proposal
 */
export type Proposal = Message<"Proposal"> & {
  /**
   * The timestamp when the game event proposal occurred
   *
   * @generated from field: optional google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * The proposed game event.
   *
   * @generated from field: optional GameEvent game_event = 2;
   */
  gameEvent?: GameEvent;
};

/**
 * @generated from message Proposal
 */
export type ProposalJson = {
  /**
   * The timestamp when the game event proposal occurred
   *
   * @generated from field: optional google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: TimestampJson;

  /**
   * The proposed game event.
   *
   * @generated from field: optional GameEvent game_event = 2;
   */
  gameEvent?: GameEventJson;
};

/**
 * Describes the message Proposal.
 * Use `create(ProposalSchema)` to create a new message.
 */
export const ProposalSchema: GenMessage<Proposal, ProposalJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 5);

/**
 * @generated from message ProposalGroup
 */
export type ProposalGroup = Message<"ProposalGroup"> & {
  /**
   * Unique ID of this group
   *
   * @generated from field: optional string id = 4;
   */
  id: string;

  /**
   * The proposals in this group
   *
   * @generated from field: repeated Proposal proposals = 1;
   */
  proposals: Proposal[];

  /**
   * Whether the proposal group was accepted
   *
   * @generated from field: optional bool accepted = 2;
   */
  accepted: boolean;
};

/**
 * @generated from message ProposalGroup
 */
export type ProposalGroupJson = {
  /**
   * Unique ID of this group
   *
   * @generated from field: optional string id = 4;
   */
  id?: string;

  /**
   * The proposals in this group
   *
   * @generated from field: repeated Proposal proposals = 1;
   */
  proposals?: ProposalJson[];

  /**
   * Whether the proposal group was accepted
   *
   * @generated from field: optional bool accepted = 2;
   */
  accepted?: boolean;
};

/**
 * Describes the message ProposalGroup.
 * Use `create(ProposalGroupSchema)` to create a new message.
 */
export const ProposalGroupSchema: GenMessage<ProposalGroup, ProposalGroupJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 6);

/**
 * @generated from message TeamInfo
 */
export type TeamInfo = Message<"TeamInfo"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional int32 goals = 2;
   */
  goals: number;

  /**
   * @generated from field: optional int32 goalkeeper = 3;
   */
  goalkeeper: number;

  /**
   * @generated from field: repeated YellowCard yellow_cards = 4;
   */
  yellowCards: YellowCard[];

  /**
   * @generated from field: repeated RedCard red_cards = 5;
   */
  redCards: RedCard[];

  /**
   * @generated from field: optional int32 timeouts_left = 6;
   */
  timeoutsLeft: number;

  /**
   * @generated from field: optional google.protobuf.Duration timeout_time_left = 7;
   */
  timeoutTimeLeft?: Duration;

  /**
   * @generated from field: optional bool on_positive_half = 8;
   */
  onPositiveHalf: boolean;

  /**
   * @generated from field: repeated Foul fouls = 9;
   */
  fouls: Foul[];

  /**
   * @generated from field: optional int32 ball_placement_failures = 10;
   */
  ballPlacementFailures: number;

  /**
   * @generated from field: optional bool ball_placement_failures_reached = 11;
   */
  ballPlacementFailuresReached: boolean;

  /**
   * @generated from field: optional bool can_place_ball = 12;
   */
  canPlaceBall: boolean;

  /**
   * @generated from field: optional int32 max_allowed_bots = 13;
   */
  maxAllowedBots: number;

  /**
   * @generated from field: optional google.protobuf.Timestamp requests_bot_substitution_since = 14;
   */
  requestsBotSubstitutionSince?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp requests_timeout_since = 15;
   */
  requestsTimeoutSince?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp requests_emergency_stop_since = 16;
   */
  requestsEmergencyStopSince?: Timestamp;

  /**
   * @generated from field: optional int32 challenge_flags = 17;
   */
  challengeFlags: number;

  /**
   * @generated from field: optional bool bot_substitution_allowed = 18;
   */
  botSubstitutionAllowed: boolean;

  /**
   * @generated from field: optional int32 bot_substitutions_left = 19;
   */
  botSubstitutionsLeft: number;

  /**
   * @generated from field: optional google.protobuf.Duration bot_substitution_time_left = 20;
   */
  botSubstitutionTimeLeft?: Duration;

  /**
   * @generated from field: optional HullColor hull_color = 21;
   */
  hullColor: HullColor;
};

/**
 * @generated from message TeamInfo
 */
export type TeamInfoJson = {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional int32 goals = 2;
   */
  goals?: number;

  /**
   * @generated from field: optional int32 goalkeeper = 3;
   */
  goalkeeper?: number;

  /**
   * @generated from field: repeated YellowCard yellow_cards = 4;
   */
  yellowCards?: YellowCardJson[];

  /**
   * @generated from field: repeated RedCard red_cards = 5;
   */
  redCards?: RedCardJson[];

  /**
   * @generated from field: optional int32 timeouts_left = 6;
   */
  timeoutsLeft?: number;

  /**
   * @generated from field: optional google.protobuf.Duration timeout_time_left = 7;
   */
  timeoutTimeLeft?: DurationJson;

  /**
   * @generated from field: optional bool on_positive_half = 8;
   */
  onPositiveHalf?: boolean;

  /**
   * @generated from field: repeated Foul fouls = 9;
   */
  fouls?: FoulJson[];

  /**
   * @generated from field: optional int32 ball_placement_failures = 10;
   */
  ballPlacementFailures?: number;

  /**
   * @generated from field: optional bool ball_placement_failures_reached = 11;
   */
  ballPlacementFailuresReached?: boolean;

  /**
   * @generated from field: optional bool can_place_ball = 12;
   */
  canPlaceBall?: boolean;

  /**
   * @generated from field: optional int32 max_allowed_bots = 13;
   */
  maxAllowedBots?: number;

  /**
   * @generated from field: optional google.protobuf.Timestamp requests_bot_substitution_since = 14;
   */
  requestsBotSubstitutionSince?: TimestampJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp requests_timeout_since = 15;
   */
  requestsTimeoutSince?: TimestampJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp requests_emergency_stop_since = 16;
   */
  requestsEmergencyStopSince?: TimestampJson;

  /**
   * @generated from field: optional int32 challenge_flags = 17;
   */
  challengeFlags?: number;

  /**
   * @generated from field: optional bool bot_substitution_allowed = 18;
   */
  botSubstitutionAllowed?: boolean;

  /**
   * @generated from field: optional int32 bot_substitutions_left = 19;
   */
  botSubstitutionsLeft?: number;

  /**
   * @generated from field: optional google.protobuf.Duration bot_substitution_time_left = 20;
   */
  botSubstitutionTimeLeft?: DurationJson;

  /**
   * @generated from field: optional HullColor hull_color = 21;
   */
  hullColor?: HullColorJson;
};

/**
 * Describes the message TeamInfo.
 * Use `create(TeamInfoSchema)` to create a new message.
 */
export const TeamInfoSchema: GenMessage<TeamInfo, TeamInfoJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 7);

/**
 * @generated from message State
 */
export type State = Message<"State"> & {
  /**
   * @generated from field: optional Referee.Stage stage = 1;
   */
  stage: Referee_Stage;

  /**
   * @generated from field: optional Command command = 2;
   */
  command?: Command;

  /**
   * @generated from field: optional GameState game_state = 19;
   */
  gameState?: GameState;

  /**
   * @generated from field: optional google.protobuf.Duration stage_time_elapsed = 4;
   */
  stageTimeElapsed?: Duration;

  /**
   * @generated from field: optional google.protobuf.Duration stage_time_left = 5;
   */
  stageTimeLeft?: Duration;

  /**
   * @generated from field: optional google.protobuf.Timestamp match_time_start = 6;
   */
  matchTimeStart?: Timestamp;

  /**
   * @generated from field: map<string, TeamInfo> team_state = 8;
   */
  teamState: { [key: string]: TeamInfo };

  /**
   * @generated from field: optional Vector2 placement_pos = 9;
   */
  placementPos?: Vector2;

  /**
   * @generated from field: optional Command next_command = 10;
   */
  nextCommand?: Command;

  /**
   * @generated from field: optional google.protobuf.Duration current_action_time_remaining = 12;
   */
  currentActionTimeRemaining?: Duration;

  /**
   * @generated from field: repeated GameEvent game_events = 13;
   */
  gameEvents: GameEvent[];

  /**
   * @generated from field: repeated ProposalGroup proposal_groups = 14;
   */
  proposalGroups: ProposalGroup[];

  /**
   * @generated from field: optional Division division = 15;
   */
  division: Division;

  /**
   * @generated from field: optional Team first_kickoff_team = 17;
   */
  firstKickoffTeam: Team;

  /**
   * @generated from field: optional MatchType match_type = 18;
   */
  matchType: MatchType;

  /**
   * @generated from field: optional google.protobuf.Timestamp ready_continue_time = 20;
   */
  readyContinueTime?: Timestamp;

  /**
   * @generated from field: optional ShootoutState shootout_state = 21;
   */
  shootoutState?: ShootoutState;

  /**
   * @generated from field: optional string status_message = 22;
   */
  statusMessage: string;

  /**
   * The maximum number of bots per team (overwrites the division config)
   *
   * @generated from field: optional int32 max_bots_per_team = 23;
   */
  maxBotsPerTeam: number;
};

/**
 * @generated from message State
 */
export type StateJson = {
  /**
   * @generated from field: optional Referee.Stage stage = 1;
   */
  stage?: Referee_StageJson;

  /**
   * @generated from field: optional Command command = 2;
   */
  command?: CommandJson;

  /**
   * @generated from field: optional GameState game_state = 19;
   */
  gameState?: GameStateJson;

  /**
   * @generated from field: optional google.protobuf.Duration stage_time_elapsed = 4;
   */
  stageTimeElapsed?: DurationJson;

  /**
   * @generated from field: optional google.protobuf.Duration stage_time_left = 5;
   */
  stageTimeLeft?: DurationJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp match_time_start = 6;
   */
  matchTimeStart?: TimestampJson;

  /**
   * @generated from field: map<string, TeamInfo> team_state = 8;
   */
  teamState?: { [key: string]: TeamInfoJson };

  /**
   * @generated from field: optional Vector2 placement_pos = 9;
   */
  placementPos?: Vector2Json;

  /**
   * @generated from field: optional Command next_command = 10;
   */
  nextCommand?: CommandJson;

  /**
   * @generated from field: optional google.protobuf.Duration current_action_time_remaining = 12;
   */
  currentActionTimeRemaining?: DurationJson;

  /**
   * @generated from field: repeated GameEvent game_events = 13;
   */
  gameEvents?: GameEventJson[];

  /**
   * @generated from field: repeated ProposalGroup proposal_groups = 14;
   */
  proposalGroups?: ProposalGroupJson[];

  /**
   * @generated from field: optional Division division = 15;
   */
  division?: DivisionJson;

  /**
   * @generated from field: optional Team first_kickoff_team = 17;
   */
  firstKickoffTeam?: TeamJson;

  /**
   * @generated from field: optional MatchType match_type = 18;
   */
  matchType?: MatchTypeJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp ready_continue_time = 20;
   */
  readyContinueTime?: TimestampJson;

  /**
   * @generated from field: optional ShootoutState shootout_state = 21;
   */
  shootoutState?: ShootoutStateJson;

  /**
   * @generated from field: optional string status_message = 22;
   */
  statusMessage?: string;

  /**
   * The maximum number of bots per team (overwrites the division config)
   *
   * @generated from field: optional int32 max_bots_per_team = 23;
   */
  maxBotsPerTeam?: number;
};

/**
 * Describes the message State.
 * Use `create(StateSchema)` to create a new message.
 */
export const StateSchema: GenMessage<State, StateJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 8);

/**
 * @generated from message ShootoutState
 */
export type ShootoutState = Message<"ShootoutState"> & {
  /**
   * @generated from field: optional Team next_team = 1;
   */
  nextTeam: Team;

  /**
   * @generated from field: map<string, int32> number_of_attempts = 2;
   */
  numberOfAttempts: { [key: string]: number };
};

/**
 * @generated from message ShootoutState
 */
export type ShootoutStateJson = {
  /**
   * @generated from field: optional Team next_team = 1;
   */
  nextTeam?: TeamJson;

  /**
   * @generated from field: map<string, int32> number_of_attempts = 2;
   */
  numberOfAttempts?: { [key: string]: number };
};

/**
 * Describes the message ShootoutState.
 * Use `create(ShootoutStateSchema)` to create a new message.
 */
export const ShootoutStateSchema: GenMessage<ShootoutState, ShootoutStateJson> = /*@__PURE__*/
  messageDesc(file_state_ssl_gc_state, 9);

