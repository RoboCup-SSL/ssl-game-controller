// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file api/ssl_gc_api.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { State, StateJson } from "../state/ssl_gc_state_pb";
import { file_state_ssl_gc_state } from "../state/ssl_gc_state_pb";
import type { Change, ChangeJson } from "../statemachine/ssl_gc_change_pb";
import { file_statemachine_ssl_gc_change } from "../statemachine/ssl_gc_change_pb";
import type { ContinueAction, ContinueActionJson, GcState, GcStateJson } from "../engine/ssl_gc_engine_pb";
import { file_engine_ssl_gc_engine } from "../engine/ssl_gc_engine_pb";
import type { Config, ConfigJson } from "../engine/ssl_gc_engine_config_pb";
import { file_engine_ssl_gc_engine_config } from "../engine/ssl_gc_engine_config_pb";
import type { Duration, DurationJson } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/ssl_gc_api.proto.
 */
export const file_api_ssl_gc_api: GenFile = /*@__PURE__*/
  fileDesc("ChRhcGkvc3NsX2djX2FwaS5wcm90byJ3CgZPdXRwdXQSGwoLbWF0Y2hfc3RhdGUYASABKAsyBi5TdGF0ZRIaCghnY19zdGF0ZRgCIAEoCzIILkdjU3RhdGUSGwoIcHJvdG9jb2wYAyABKAsyCS5Qcm90b2NvbBIXCgZjb25maWcYBCABKAsyBy5Db25maWciOAoIUHJvdG9jb2wSDQoFZGVsdGEYASABKAgSHQoFZW50cnkYAiADKAsyDi5Qcm90b2NvbEVudHJ5IqIBCg1Qcm90b2NvbEVudHJ5EgoKAmlkGAEgASgFEhcKBmNoYW5nZRgCIAEoCzIHLkNoYW5nZRI1ChJtYXRjaF90aW1lX2VsYXBzZWQYAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SNQoSc3RhZ2VfdGltZV9lbGFwc2VkGAQgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIn4KBUlucHV0EhcKBmNoYW5nZRgBIAEoCzIHLkNoYW5nZRITCgtyZXNldF9tYXRjaBgCIAEoCBIdCgxjb25maWdfZGVsdGEYAyABKAsyBy5Db25maWcSKAoPY29udGludWVfYWN0aW9uGAQgASgLMg8uQ29udGludWVBY3Rpb25CTkINU3NsR2NBcGlQcm90b1ABWjtnaXRodWIuY29tL1JvYm9DdXAtU1NML3NzbC1nYW1lLWNvbnRyb2xsZXIvaW50ZXJuYWwvYXBwL2FwaQ", [file_state_ssl_gc_state, file_statemachine_ssl_gc_change, file_engine_ssl_gc_engine, file_engine_ssl_gc_engine_config, file_google_protobuf_duration]);

/**
 * Message format that is pushed from the GC to the client
 *
 * @generated from message Output
 */
export type Output = Message<"Output"> & {
  /**
   * The current match state
   *
   * @generated from field: optional State match_state = 1;
   */
  matchState?: State;

  /**
   * The current GC state
   *
   * @generated from field: optional GcState gc_state = 2;
   */
  gcState?: GcState;

  /**
   * The protocol
   *
   * @generated from field: optional Protocol protocol = 3;
   */
  protocol?: Protocol;

  /**
   * The engine config
   *
   * @generated from field: optional Config config = 4;
   */
  config?: Config;
};

/**
 * Message format that is pushed from the GC to the client
 *
 * @generated from message Output
 */
export type OutputJson = {
  /**
   * The current match state
   *
   * @generated from field: optional State match_state = 1;
   */
  matchState?: StateJson;

  /**
   * The current GC state
   *
   * @generated from field: optional GcState gc_state = 2;
   */
  gcState?: GcStateJson;

  /**
   * The protocol
   *
   * @generated from field: optional Protocol protocol = 3;
   */
  protocol?: ProtocolJson;

  /**
   * The engine config
   *
   * @generated from field: optional Config config = 4;
   */
  config?: ConfigJson;
};

/**
 * Describes the message Output.
 * Use `create(OutputSchema)` to create a new message.
 */
export const OutputSchema: GenMessage<Output, OutputJson> = /*@__PURE__*/
  messageDesc(file_api_ssl_gc_api, 0);

/**
 * The game protocol
 *
 * @generated from message Protocol
 */
export type Protocol = Message<"Protocol"> & {
  /**
   * Is this a delta only?
   * Entries that were already sent are not sent again, because the protocol is immutable anyway.
   * But if the game is reset, the whole protocol must be replaced. That's what this flag is for.
   *
   * @generated from field: optional bool delta = 1;
   */
  delta: boolean;

  /**
   * The (delta) list of entries
   *
   * @generated from field: repeated ProtocolEntry entry = 2;
   */
  entry: ProtocolEntry[];
};

/**
 * The game protocol
 *
 * @generated from message Protocol
 */
export type ProtocolJson = {
  /**
   * Is this a delta only?
   * Entries that were already sent are not sent again, because the protocol is immutable anyway.
   * But if the game is reset, the whole protocol must be replaced. That's what this flag is for.
   *
   * @generated from field: optional bool delta = 1;
   */
  delta?: boolean;

  /**
   * The (delta) list of entries
   *
   * @generated from field: repeated ProtocolEntry entry = 2;
   */
  entry?: ProtocolEntryJson[];
};

/**
 * Describes the message Protocol.
 * Use `create(ProtocolSchema)` to create a new message.
 */
export const ProtocolSchema: GenMessage<Protocol, ProtocolJson> = /*@__PURE__*/
  messageDesc(file_api_ssl_gc_api, 1);

/**
 * A protocol entry of a change
 *
 * @generated from message ProtocolEntry
 */
export type ProtocolEntry = Message<"ProtocolEntry"> & {
  /**
   * Id of the entry
   *
   * @generated from field: optional int32 id = 1;
   */
  id: number;

  /**
   * The change that was made
   *
   * @generated from field: optional Change change = 2;
   */
  change?: Change;

  /**
   * The match time elapsed when this change was made
   *
   * @generated from field: optional google.protobuf.Duration match_time_elapsed = 3;
   */
  matchTimeElapsed?: Duration;

  /**
   * The stage time elapsed when this change was made
   *
   * @generated from field: optional google.protobuf.Duration stage_time_elapsed = 4;
   */
  stageTimeElapsed?: Duration;
};

/**
 * A protocol entry of a change
 *
 * @generated from message ProtocolEntry
 */
export type ProtocolEntryJson = {
  /**
   * Id of the entry
   *
   * @generated from field: optional int32 id = 1;
   */
  id?: number;

  /**
   * The change that was made
   *
   * @generated from field: optional Change change = 2;
   */
  change?: ChangeJson;

  /**
   * The match time elapsed when this change was made
   *
   * @generated from field: optional google.protobuf.Duration match_time_elapsed = 3;
   */
  matchTimeElapsed?: DurationJson;

  /**
   * The stage time elapsed when this change was made
   *
   * @generated from field: optional google.protobuf.Duration stage_time_elapsed = 4;
   */
  stageTimeElapsed?: DurationJson;
};

/**
 * Describes the message ProtocolEntry.
 * Use `create(ProtocolEntrySchema)` to create a new message.
 */
export const ProtocolEntrySchema: GenMessage<ProtocolEntry, ProtocolEntryJson> = /*@__PURE__*/
  messageDesc(file_api_ssl_gc_api, 2);

/**
 * Message format that can be send from the client to the GC
 *
 * @generated from message Input
 */
export type Input = Message<"Input"> & {
  /**
   * A change to be enqueued into the GC engine
   *
   * @generated from field: optional Change change = 1;
   */
  change?: Change;

  /**
   * Reset the match
   *
   * @generated from field: optional bool reset_match = 2;
   */
  resetMatch: boolean;

  /**
   * An updated config delta
   *
   * @generated from field: optional Config config_delta = 3;
   */
  configDelta?: Config;

  /**
   * Continue with action
   *
   * @generated from field: optional ContinueAction continue_action = 4;
   */
  continueAction?: ContinueAction;
};

/**
 * Message format that can be send from the client to the GC
 *
 * @generated from message Input
 */
export type InputJson = {
  /**
   * A change to be enqueued into the GC engine
   *
   * @generated from field: optional Change change = 1;
   */
  change?: ChangeJson;

  /**
   * Reset the match
   *
   * @generated from field: optional bool reset_match = 2;
   */
  resetMatch?: boolean;

  /**
   * An updated config delta
   *
   * @generated from field: optional Config config_delta = 3;
   */
  configDelta?: ConfigJson;

  /**
   * Continue with action
   *
   * @generated from field: optional ContinueAction continue_action = 4;
   */
  continueAction?: ContinueActionJson;
};

/**
 * Describes the message Input.
 * Use `create(InputSchema)` to create a new message.
 */
export const InputSchema: GenMessage<Input, InputJson> = /*@__PURE__*/
  messageDesc(file_api_ssl_gc_api, 3);

