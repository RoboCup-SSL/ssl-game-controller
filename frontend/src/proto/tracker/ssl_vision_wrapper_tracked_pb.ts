// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,json_types=true"
// @generated from file tracker/ssl_vision_wrapper_tracked.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { TrackedFrame, TrackedFrameJson } from "./ssl_vision_detection_tracked_pb";
import { file_tracker_ssl_vision_detection_tracked } from "./ssl_vision_detection_tracked_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file tracker/ssl_vision_wrapper_tracked.proto.
 */
export const file_tracker_ssl_vision_wrapper_tracked: GenFile = /*@__PURE__*/
  fileDesc("Cih0cmFja2VyL3NzbF92aXNpb25fd3JhcHBlcl90cmFja2VkLnByb3RvIl8KFFRyYWNrZXJXcmFwcGVyUGFja2V0EgwKBHV1aWQYASACKAkSEwoLc291cmNlX25hbWUYAiABKAkSJAoNdHJhY2tlZF9mcmFtZRgDIAEoCzINLlRyYWNrZWRGcmFtZUJhQhxTc2xWaXNpb25XcmFwcGVyVHJhY2tlZFByb3RvUAFaP2dpdGh1Yi5jb20vUm9ib0N1cC1TU0wvc3NsLWdhbWUtY29udHJvbGxlci9pbnRlcm5hbC9hcHAvdHJhY2tlcg", [file_tracker_ssl_vision_detection_tracked]);

/**
 * A wrapper packet containing meta data of the source
 * Also serves for the possibility to extend the protocol later
 *
 * @generated from message TrackerWrapperPacket
 */
export type TrackerWrapperPacket = Message<"TrackerWrapperPacket"> & {
  /**
   * A random UUID of the source that is kept constant at the source while running
   * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
   *
   * @generated from field: required string uuid = 1;
   */
  uuid: string;

  /**
   * The name of the source software that is producing this messages.
   *
   * @generated from field: optional string source_name = 2;
   */
  sourceName: string;

  /**
   * The tracked frame
   *
   * @generated from field: optional TrackedFrame tracked_frame = 3;
   */
  trackedFrame?: TrackedFrame;
};

/**
 * A wrapper packet containing meta data of the source
 * Also serves for the possibility to extend the protocol later
 *
 * @generated from message TrackerWrapperPacket
 */
export type TrackerWrapperPacketJson = {
  /**
   * A random UUID of the source that is kept constant at the source while running
   * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
   *
   * @generated from field: required string uuid = 1;
   */
  uuid?: string;

  /**
   * The name of the source software that is producing this messages.
   *
   * @generated from field: optional string source_name = 2;
   */
  sourceName?: string;

  /**
   * The tracked frame
   *
   * @generated from field: optional TrackedFrame tracked_frame = 3;
   */
  trackedFrame?: TrackedFrameJson;
};

/**
 * Describes the message TrackerWrapperPacket.
 * Use `create(TrackerWrapperPacketSchema)` to create a new message.
 */
export const TrackerWrapperPacketSchema: GenMessage<TrackerWrapperPacket, TrackerWrapperPacketJson> = /*@__PURE__*/
  messageDesc(file_tracker_ssl_vision_wrapper_tracked, 0);

