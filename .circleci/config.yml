version: 2
jobs:
  frontend:
    docker:
      - image: circleci/node:10.8.0
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: yarn install
      - run:
          name: "Run lint"
          command: yarn lint
      - run:
          name: "Build"
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist/*

  backend:
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/RoboCup-SSL/ssl-game-controller
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: go get -v -t -d ./...
      - run: go test -v -covermode=count -coverprofile=count.out ./...
      - run: go tool cover -html=count.out -o coverage.html
      - run:
          working_directory: cmd/ssl-game-controller
          command: |
            go get -v github.com/gobuffalo/packr/packr
            GOOS=linux GOARCH=amd64 packr build -o ../../release/ssl-game-controller_linux_amd64
            GOOS=darwin GOARCH=amd64 packr build -o ../../release/ssl-game-controller_darwin_amd64
            GOOS=windows GOARCH=amd64 packr build -o ../../release/ssl-game-controller_windows_amd64.exe
      - persist_to_workspace:
          root: .
          paths:
            - release/*
      - store_artifacts:
          path: coverage.html
          destination: coverage

  publish-github-release:
    docker:
      - image: circleci/golang:1.14
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Prepare artifacts"
          working_directory: release
          command: |
            cp ssl-game-controller_linux_amd64 gh/ssl-game-controller_${CIRCLE_TAG}_linux_amd64
            cp ssl-game-controller_darwin_amd64 gh/ssl-game-controller_${CIRCLE_TAG}_darwin_amd64
            cp ssl-game-controller_windows_amd64.exe gh/ssl-game-controller_${CIRCLE_TAG}_windows_amd64.exe
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./release/gh/

  publish-package-maven:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Publish Packages to Bintray"
          working_directory: .circleci/pkg-maven
          command: |
            ./gradlew bintrayUpload --info --stacktrace

workflows:
  version: 2
  main:
    jobs:
      - frontend:
          filters:
            tags:
              only: /.*/
      - backend:
          requires:
            - frontend
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - backend
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - publish-package-maven:
          requires:
            - backend
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
